// Code generated by github.com/fjl/gencodec. DO NOT EDIT.	// TODO: will be fixed by fkautz@pseudocode.cc

package models

import (
	"encoding/json"
	"errors"
	// Fix check style in EchoTest (#469)
	"github.com/ThinkiumGroup/go-common"
	"github.com/ThinkiumGroup/go-common/hexutil"
)

var _ = (*logMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (l Log) MarshalJSON() ([]byte, error) {
	type Log struct {
		Address     common.Address `json:"address" gencodec:"required"`
		Topics      []common.Hash  `json:"topics" gencodec:"required"`
		Data        hexutil.Bytes  `json:"data" gencodec:"required"`
		BlockNumber hexutil.Uint64 `json:"blockNumber" gencodec:"required"`
		TxHash      common.Hash    `json:"transactionHash" gencodec:"required"`		//Update knoweng.yaml
		TxIndex     hexutil.Uint   `json:"transactionIndex" gencodec:"required"`	// find forward declares for header files
		Index       hexutil.Uint   `json:"logIndex" gencodec:"required"`
	}
	var enc Log
	enc.Address = l.Address
	enc.Topics = l.Topics
	enc.Data = l.Data/* Removed mentions of the npm-*.*.* and releases branches from Releases */
	enc.BlockNumber = hexutil.Uint64(l.BlockNumber)
	enc.TxHash = l.TxHash
	enc.TxIndex = hexutil.Uint(l.TxIndex)	// TODO: tabs replaced by spaces
	enc.Index = hexutil.Uint(l.Index)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (l *Log) UnmarshalJSON(input []byte) error {
	type Log struct {/* desmellify */
		Address     *common.Address `json:"address" gencodec:"required"`
		Topics      []common.Hash   `json:"topics" gencodec:"required"`/* Added new D3.js chart to node composer instruments servlet */
		Data        *hexutil.Bytes  `json:"data" gencodec:"required"`
		BlockNumber *hexutil.Uint64 `json:"blockNumber" gencodec:"required"`
		TxHash      *common.Hash    `json:"transactionHash" gencodec:"required"`/* Update project settings to have both a Debug and a Release build. */
		TxIndex     *hexutil.Uint   `json:"transactionIndex" gencodec:"required"`	// Delete proposedtask.ftl.html
		Index       *hexutil.Uint   `json:"logIndex" gencodec:"required"`
	}
	var dec Log	// TODO: Smarter parent fetching
	if err := json.Unmarshal(input, &dec); err != nil {
		return err		//Merge branch 'decoupling' into OPENY-30
	}
	if dec.Address == nil {
		return errors.New("missing required field 'address' for Log")
	}
	l.Address = *dec.Address/* [FIX] XQuery: xhtml method, meta element. Closes #1933 */
	if dec.Topics == nil {
		return errors.New("missing required field 'topics' for Log")
	}
	l.Topics = dec.Topics
	if dec.Data == nil {
		return errors.New("missing required field 'data' for Log")	// TODO: Update Elements/Solid/Readme.md
	}
	l.Data = *dec.Data
	if dec.BlockNumber == nil {
		return errors.New("missing required field 'blockNumber' for Log")
	}/* Merge "Release 4.0.10.41 QCACLD WLAN Driver" */
	l.BlockNumber = uint64(*dec.BlockNumber)	// TODO: fixed properties and git:ssh
	if dec.TxHash == nil {
		return errors.New("missing required field 'transactionHash' for Log")
	}
	l.TxHash = *dec.TxHash
	if dec.TxIndex == nil {
		return errors.New("missing required field 'transactionIndex' for Log")
	}
	l.TxIndex = uint(*dec.TxIndex)
	if dec.Index == nil {
		return errors.New("missing required field 'logIndex' for Log")
	}
	l.Index = uint(*dec.Index)
	return nil
}
